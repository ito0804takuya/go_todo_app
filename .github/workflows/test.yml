# Github ActionsでGoコードを自動テスト+カバレッジレポート出力するワークフロー

# ワークフロー名
name: Test

# トリガーイベント定義
on:
  # mainブランチに対するpush
  push:
    branches:
      - main
  # PRを新規作成時
  pull_request:

jobs:
  test:
    # ubuntu上で実行される
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 20s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_USER: todo
          MYSQL_PASSWORD: todo
          MYSQL_DATABASE: todo
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
            - 6379:6379
    steps:
      # 実行環境（ubuntu）へ、リポジトリ内のコードを取得
      - uses: actions/checkout@v3
      # go環境を準備
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      # MySQL サービスコンテナ起動
      - run: |
          go install github.com/sqldef/sqldef/cmd/mysqldef@latest
          mysqldef -u todo -p todo -h 127.0.0.1 -P 3306 todo < ./_tools/mysql/schema.sql
      # テスト実行
      - name: Run tests with coverage report output
        run: go test ./... -coverprofile=coverage.out
      # octocovでカバレッジレポートを処理（coverage.outファイルを使ってレポート作成）
      - uses: k1LoW/octocov-action@v0